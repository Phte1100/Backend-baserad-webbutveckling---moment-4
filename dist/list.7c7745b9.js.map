{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,WAM5B,aAAa,OAAO,CAAC,UAE/B,CAAA,OAAO,QAAQ,CAAC,IAAI,CAAG,YAAA,EAN3B,AAUJ,WACI,IAAM,EAAQ,aAAa,OAAO,CAAC,SACnC,MAAM,mDAAoD,CACtD,QAAS,CACL,cAAiB,CAAC,OAAO,EAAE,EAAM,CAAC,AACtC,CACJ,GACC,IAAI,CAAC,AAAA,IACF,GAAI,CAAC,EAAS,EAAE,CAOZ,MANwB,MAApB,EAAS,MAAM,GAEf,MAAM,kDACN,aAAa,UAAU,CAAC,SACxB,OAAO,QAAQ,CAAC,IAAI,CAAG,cAErB,AAAI,MAAM,kCAEpB,OAAO,EAAS,IAAI,EACxB,GACC,IAAI,CAAC,AAAA,QAUY,EACb,MAAM,OAAO,CADA,EATqB,IAWnC,CAAA,EAAO,CAAC,EAAK,AAAA,EAEV,EAAK,GAAG,CAAC,AAAA,GAAS,CAAA,CACrB,GAAG,CAAI,CACP,SAAU,EAAK,QAAQ,CAAG,EAAK,QAAQ,CAAC,OAAO,CAAC,gBAAiB,IAAM,GACvE,SAAU,EAAK,QAAQ,CAAG,EAAK,QAAQ,CAAC,OAAO,CAAC,gBAAiB,IAAM,EAC3E,CAAA,EAhBA,GACC,KAAK,CAAC,AAAA,IACH,QAAQ,KAAK,CAAC,SAAU,GAExB,AADiB,SAAS,cAAc,CAAC,YAChC,WAAW,CAAG,gEAC3B,EACJ,GApCA,GA0DA,SAAS,cAAc,CAAC,gBAAgB,gBAAgB,CAAC,QATzD,WACI,aAAa,UAAU,CAAC,SAExB,AADiB,SAAS,cAAc,CAAC,YAChC,WAAW,CAAG,qBACvB,WAAW,KACP,OAAO,QAAQ,CAAC,IAAI,CAAG,YAC3B,EAAG,IACP","sources":["<anon>","protected.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    checkAuthentication();\n    fetchProtectedData();\n});\nfunction checkAuthentication() {\n    const token = localStorage.getItem(\"token\");\n    if (!token) window.location.href = \"index.html\"; // Omdirigera till inloggningssidan om ingen token finns\n}\nfunction fetchProtectedData() {\n    const token = localStorage.getItem(\"token\");\n    fetch(\"https://auth-app-io0c.onrender.com/api/protected\", {\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        }\n    }).then((response)=>{\n        if (!response.ok) {\n            if (response.status === 401) {\n                // Token är ogiltig eller har gått ut\n                alert(\"Sessionen har g\\xe5tt ut. V\\xe4nligen logga in igen.\");\n                localStorage.removeItem(\"token\"); // Rensa token\n                window.location.href = \"index.html\"; // Omdirigera till inloggningssidan\n            }\n            throw new Error(\"Kunde inte h\\xe4mta skyddad data.\");\n        }\n        return response.json();\n    }).then((data)=>{\n        const sanitizedData = sanitizeData(data);\n    }).catch((error)=>{\n        console.error(\"Error:\", error);\n        const Feedback = document.getElementById(\"Feedback\");\n        Feedback.textContent = \"Ett fel intr\\xe4ffade vid h\\xe4mtning av data. V\\xe4nligen f\\xf6rs\\xf6k igen.\";\n    });\n}\nfunction sanitizeData(data) {\n    if (!Array.isArray(data)) data = [\n        data\n    ];\n    return data.map((item)=>({\n            ...item,\n            username: item.username ? item.username.replace(/(<([^>]+)>)/ig, \"\") : \"\",\n            password: item.password ? item.password.replace(/(<([^>]+)>)/ig, \"\") : \"\"\n        }));\n}\nfunction logout() {\n    localStorage.removeItem(\"token\"); // Rensa token\n    const Feedback = document.getElementById(\"Feedback\");\n    Feedback.textContent = \"Du har loggats ut.\";\n    setTimeout(()=>{\n        window.location.href = \"index.html\"; // Omdirigera till inloggningssidan\n    }, 1000); // Vänta en sekund innan omdirigering\n}\ndocument.getElementById(\"logoutButton\").addEventListener(\"click\", logout);\n\n//# sourceMappingURL=list.7c7745b9.js.map\n","document.addEventListener('DOMContentLoaded', function() {\r\n    checkAuthentication();\r\n    fetchProtectedData();\r\n});\r\n\r\nfunction checkAuthentication() {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        window.location.href = 'index.html'; // Omdirigera till inloggningssidan om ingen token finns\r\n    }\r\n}\r\n\r\nfunction fetchProtectedData() {\r\n    const token = localStorage.getItem('token');\r\n    fetch('https://auth-app-io0c.onrender.com/api/protected', {\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // Token är ogiltig eller har gått ut\r\n                alert('Sessionen har gått ut. Vänligen logga in igen.');\r\n                localStorage.removeItem('token'); // Rensa token\r\n                window.location.href = 'index.html'; // Omdirigera till inloggningssidan\r\n            }\r\n            throw new Error('Kunde inte hämta skyddad data.');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        const sanitizedData = sanitizeData(data);\r\n    })\r\n    .catch(error => {\r\n        console.error('Error:', error);\r\n        const Feedback = document.getElementById('Feedback');\r\n        Feedback.textContent = 'Ett fel inträffade vid hämtning av data. Vänligen försök igen.';\r\n    });\r\n}\r\n\r\nfunction sanitizeData(data) {\r\n    if (!Array.isArray(data)) {\r\n        data = [data]; \r\n    }\r\n    return data.map(item => ({\r\n        ...item,\r\n        username: item.username ? item.username.replace(/(<([^>]+)>)/ig, '') : '',  // Sanera användarnamnet\r\n        password: item.password ? item.password.replace(/(<([^>]+)>)/ig, '') : ''\r\n    }));\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem('token'); // Rensa token\r\n    const Feedback = document.getElementById('Feedback');\r\n    Feedback.textContent = 'Du har loggats ut.';\r\n    setTimeout(() => {\r\n        window.location.href = 'index.html'; // Omdirigera till inloggningssidan\r\n    }, 1000); // Vänta en sekund innan omdirigering\r\n}\r\n\r\ndocument.getElementById('logoutButton').addEventListener('click', logout);\r\n"],"names":["document","addEventListener","localStorage","getItem","window","location","href","fetchProtectedData","token","fetch","headers","then","response","ok","status","alert","removeItem","Error","json","data","Array","isArray","map","item","username","replace","password","catch","error","console","Feedback","getElementById","textContent","setTimeout"],"version":3,"file":"list.7c7745b9.js.map"}